/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { memo, useRef } from "react";
import useMaterialAnimation from "./hooks/useMaterialAnimation";
import useObjectAnimation from "./hooks/useObjectAnimation";
import { materialTransitions } from "./transitionProps/materialTransitions03";
import {
  ceilHingeProps,
  contentFrontProps,
  contentMainProps,
} from "./transitionProps/sceneTransitions03";

function Model({
  transitionState,
  nodes,
  materials,
  depthMaterials,
  ...props
}) {
  const ceilRef = useRef(null);
  const contentMainRef = useRef(null);
  const contentFrontRef = useRef(null);

  useObjectAnimation(ceilRef, transitionState, ceilHingeProps);
  useObjectAnimation(contentMainRef, transitionState, contentMainProps);
  useObjectAnimation(contentFrontRef, transitionState, contentFrontProps);

  useMaterialAnimation(materials, transitionState, materialTransitions);

  return (
    <group {...props} dispose={null} rotation={[0, Math.PI / 2, 0]}>
      {/* 1. Ceil Card, Backgrounds */}
      {/* Rotation으로 Main 힌지를 조정합니다. Pre: 1, Open: 0, Next: -1 */}
      <group rotation={[0, 0, (Math.PI * 0) / 2]} ref={ceilRef}>
        <mesh
          geometry={nodes.ceil_03.geometry}
          material={materials.sheet_ceil_03}
          customDepthMaterial={depthMaterials.sheet_ceil}
          position={[0.05, 3.3, 0]}
          receiveShadow
        />
      </group>

      {/* 2. Floor Card and Hinged items */}
      {/* Rotation으로 Main 힌지를 조절합니다.
      Close: 0 | Open: Math.PI / 2 */}
      <group rotation={[0, 0, (Math.PI * 0) / 2]}>
        <mesh
          geometry={nodes.floor_03.geometry}
          material={materials.sheet_floor_03}
          customDepthMaterial={depthMaterials.sheet_floor}
          position={[-0.05, 3.31, 0]}
        />

        <group>
          <group position={[-0.03, 2.6, 0]}>
            {/* Rotation으로 힌지를 조절합니다.
            Close: 0 | Open: -1/2 PI */}
            <group rotation={[0, 0, (-Math.PI * 0) / 2]} ref={contentMainRef}>
              <mesh
                geometry={nodes.main_03.geometry}
                material={materials.content_main}
                customDepthMaterial={depthMaterials.content_main}
                scale={[1, 0.61, 1]}
                position={[0.02, 2.05, 0]}
                castShadow
                receiveShadow
              />
            </group>
          </group>

          <group position={[-0.04, 5.2, 0]}>
            {/* Rotation으로 힌지를 조절합니다. Close: -2 * PI, Open: -1/2 * PI */}
            <group rotation={[0, 0, (-Math.PI * 2) / 2]} ref={contentFrontRef}>
              <mesh
                geometry={nodes.front_03.geometry}
                material={materials.content_front}
                customDepthMaterial={depthMaterials.content_front}
                scale={[1, 0.61, 1]}
                position={[-0.01, 2.05, 0]}
                castShadow
              />
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

export default memo(Model);
